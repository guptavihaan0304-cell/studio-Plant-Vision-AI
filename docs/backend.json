
{
  "entities": {
    "UserAccount": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserAccount",
      "type": "object",
      "description": "Stores user account information and application settings.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user account."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "userName": {
          "type": "string",
          "description": "The users user name. This is a unique handle."
        },
        "registrationDate": {
          "type": "string",
          "description": "Date and time the user registered.",
          "format": "date-time"
        },
        "preferredLanguage": {
          "type": "string",
          "description": "The users preferred language.",
          "default": "English"
        },
        "aiScanAccuracy": {
          "type": "string",
          "description": "The desired accuracy level for AI scans.",
          "enum": ["eco", "standard", "ultra"],
          "default": "standard"
        },
        "isRealTimeScan": {
          "type": "boolean",
          "description": "Whether to use real-time AI scanning in the camera view.",
          "default": true
        },
        "isVoiceAssistant": {
          "type": "boolean",
          "description": "Whether the AI assistant should use voice.",
          "default": false
        },
        "isOrganicOnly": {
          "type": "boolean",
          "description": "Whether to only suggest organic remedies.",
          "default": false
        },
        "skillLevel": {
          "type": "string",
          "description": "The user's self-reported gardening skill level.",
          "enum": ["beginner", "expert"],
          "default": "beginner"
        },
        "isPetSafe": {
          "type": "boolean",
          "description": "Whether to warn about plants that are not pet-safe.",
          "default": true
        },
        "isChildSafe": {
          "type": "boolean",
          "description": "Whether to provide alerts about plant toxicity for children.",
          "default": true
        }
      },
      "required": [
        "id",
        "email",
        "userName",
        "registrationDate"
      ]
    },
    "PlantAnalysis": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PlantAnalysis",
      "type": "object",
      "description": "Stores plant analysis results for a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the plant analysis record."
        },
        "userAccountId": {
          "type": "string",
          "description": "Reference to UserAccount. (Relationship: UserAccount 1:N PlantAnalysis)"
        },
        "plantName": {
          "type": "string",
          "description": "Name of the plant identified."
        },
        "scientificName": {
          "type": "string",
          "description": "Scientific classification of the identified plant."
        },
        "analysisDate": {
          "type": "string",
          "description": "Date and time the analysis was performed.",
          "format": "date-time"
        },
        "identifiedDiseases": {
          "type": "array",
          "description": "Array of identified plant diseases.",
          "items": {
            "type": "string"
          }
        },
        "remedySuggestions": {
          "type": "string",
          "description": "Suggested remedies and care instructions."
        },
        "plantImageURI": {
          "type": "string",
          "description": "A URI link to the source plant image that was analyzed.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "userAccountId",
        "plantName",
        "analysisDate"
      ]
    },
    "CopyrightInformation": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CopyrightInformation",
      "type": "object",
      "description": "Stores copyright information for the application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the copyright information."
        },
        "copyrightHolder": {
          "type": "string",
          "description": "Name of the copyright holder."
        },
        "copyrightYear": {
          "type": "number",
          "description": "Year of copyright.",
          "format": "number"
        },
        "licenseType": {
          "type": "string",
          "description": "Type of license (e.g., MIT, Apache 2.0)."
        },
        "notice": {
          "type": "string",
          "description": "Additional copyright notice or terms."
        }
      },
      "required": [
        "id",
        "copyrightHolder",
        "copyrightYear",
        "licenseType"
      ]
    },
    "GrowthTracker": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GrowthTracker",
      "type": "object",
      "description": "Stores growth tracking notes for a specific plant analysis.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the growth tracker record."
        },
        "analysisId": {
          "type": "string",
          "description": "Reference to the PlantAnalysis this note belongs to."
        },
        "userId": {
          "type": "string",
          "description": "The user who owns this note."
        },
        "noteDate": {
          "type": "string",
          "description": "Date and time the note was created.",
          "format": "date-time"
        },
        "note": {
          "type": "string",
          "description": "The text content of the growth note."
        },
        "imageUrl": {
          "type": "string",
          "description": "Optional image URL associated with the note.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "analysisId",
        "userId",
        "noteDate",
        "note"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserAccount",
          "schema": {
            "$ref": "#/backend/entities/UserAccount"
          },
          "description": "Stores user account information. Path-based ownership is enforced via the {userId} parameter.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user account."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/plantAnalyses/{plantAnalysisId}",
        "definition": {
          "entityName": "PlantAnalysis",
          "schema": {
            "$ref": "#/backend/entities/PlantAnalysis"
          },
          "description": "Stores plant analysis results for a specific user. Includes denormalized 'userAccountId' for authorization independence. This copies the 'userId' to allow rules to validate ownership without read.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user account."
            },
            {
              "name": "plantAnalysisId",
              "description": "The unique identifier for the plant analysis record."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/plantAnalyses/{plantAnalysisId}/growthTrackers/{growthTrackerId}",
        "definition": {
          "entityName": "GrowthTracker",
          "schema": {
            "$ref": "#/backend/entities/GrowthTracker"
          },
          "description": "Stores growth tracking notes for a specific plant analysis. Ownership is inherited from the parent plantAnalysis.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user account."
            },
            {
              "name": "plantAnalysisId",
              "description": "The unique identifier for the plant analysis record."
            },
            {
              "name": "growthTrackerId",
              "description": "The unique identifier for the growth tracker record."
            }
          ]
        }
      },
      {
        "path": "/copyright/info",
        "definition": {
          "entityName": "CopyrightInformation",
          "schema": {
            "$ref": "#/backend/entities/CopyrightInformation"
          },
          "description": "Stores copyright information for the application. This is a singleton; only one document exists here.  Access to this document will be public."
        }
      }
    ],
    "reasoning": "This Firestore structure prioritizes security, scalability, and debuggability, following the core design principles of Authorization Independence, Clarity of Intent, DBAC (Database Based Access Control), and QAPs (Rules are not Filters). It leverages denormalization to avoid `get()` calls in security rules, ensures all documents in a collection share the same security requirements, and employs consistent access modeling.\n\n**Explanation:**\n\n*   **User Accounts:** User data is stored in `/users/{userId}`, enabling path-based ownership for user-specific data. This allows simple security rules to ensure only the user can access their own data.\n*   **Plant Analysis Results:** Plant analysis results are stored under `/users/{userId}/plantAnalyses/{plantAnalysisId}`, establishing a hierarchical relationship. The `userAccountId` field within each `PlantAnalysis` document ensures that the analysis is tied to the correct user, reinforcing data integrity and ownership.\n*   **Growth Tracker:** Growth tracker notes are stored in a sub-collection `/users/{userId}/plantAnalyses/{plantAnalysisId}/growthTrackers/{growthTrackerId}`. This nesting ensures that growth notes are directly tied to a specific plant analysis and inherit ownership, making queries for a plant's entire history efficient and secure.\n*   **Copyright Information:** Copyright information is stored in a single document `/copyright/info`. This is a singleton pattern, ensuring that only one copyright document exists. Access to the copyright information is public, so specific rules are not needed to limit access.\n\n**Authorization Independence:** The `PlantAnalysis` entity includes the `userAccountId` field, which is a denormalized copy of the user ID. This eliminates the need for security rules to perform `get()` operations on the `/users/{userId}` document to verify ownership.\n\n**QAPs Support:** The structure is designed to support secure `list` operations.  Since Plant Analysis are nested under each user, listing plant analyses is secure, as the security rules will only return results for the user accessing their own plant analyses."
  }
}
